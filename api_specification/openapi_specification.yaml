openapi: 3.0.2
info:
  title: REST VK Friends
  version: 1.0.0
  description: AOpenAPI Specification for Django REST VK Friends
paths:
  /auth/users/:
    get:
      operationId: listCustomUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - auth
  /auth/users/me/:
    get:
      operationId: meCustomUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    put:
      operationId: meCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    patch:
      operationId: meCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    delete:
      operationId: meCustomUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - auth
  /auth/users/{id}/:
    get:
      operationId: retrieveCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    put:
      operationId: updateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    patch:
      operationId: partialUpdateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - auth
    delete:
      operationId: destroyCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - auth
  /api/:
    get:
      operationId: listCustomUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/user/:
    get:
      operationId: retrieveCustomUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCustomUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/user/{id}/:
    get:
      operationId: retrieveCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCustomUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/friends/all_friends/:
    get:
      operationId: listFriends
      description: All Friends List for Admins
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    post:
      operationId: createFriends
      description: All Friends List for Admins
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friends'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friends'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friends'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
  /api/friends/all_friends/{id}/:
    get:
      operationId: retrieveFriends
      description: All Friends List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    put:
      operationId: updateFriends
      description: All Friends List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friends'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friends'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friends'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFriends
      description: All Friends List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friends'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friends'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friends'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFriends
      description: All Friends List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/friends/all_friendship_requests/:
    get:
      operationId: listFriendshipRequests
      description: All Friendship Requests List for Admins
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    post:
      operationId: createFriendshipRequest
      description: All Friendship Requests List for Admins
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
  /api/friends/all_friendship_requests/{id}/:
    get:
      operationId: retrieveFriendshipRequest
      description: All Friendship Requests List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    put:
      operationId: updateFriendshipRequest
      description: All Friendship Requests List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFriendshipRequest
      description: All Friendship Requests List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFriendshipRequest
      description: All Friendship Requests List for Admins
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/friends/user_friends/:
    get:
      operationId: listFriends
      description: User's Friends API View Class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    post:
      operationId: createFriends
      description: User's Friends API View Class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friends'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friends'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friends'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
  /api/friends/user_friends/{id}/:
    get:
      operationId: retrieveFriends
      description: User's Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    put:
      operationId: updateFriends
      description: User's Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friends'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friends'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friends'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFriends
      description: User's Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Friends'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Friends'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Friends'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Friends'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFriends
      description: User's Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/friends/friendship_requests/:
    get:
      operationId: listFriendshipRequests
      description: User's Requests to Friends API View Class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    post:
      operationId: createFriendshipRequest
      description: User's Requests to Friends API View Class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
  /api/friends/friendship_requests/{id}/:
    get:
      operationId: retrieveFriendshipRequest
      description: User's Requests to Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    put:
      operationId: updateFriendshipRequest
      description: User's Requests to Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateFriendshipRequest
      description: User's Requests to Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FriendshipRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendshipRequest'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyFriendshipRequest
      description: User's Requests to Friends API View Class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friendship request.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/friends/get_friends_status/:
    get:
      operationId: listGetFriendStatus
      description: Check Friendship Status
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /auth/users/activation/:
    post:
      operationId: activationCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - auth
  /auth/users/resend_activation/:
    post:
      operationId: resendActivationCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - auth
  /auth/users/reset_password/:
    post:
      operationId: resetPasswordCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - auth
  /auth/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - auth
  /auth/users/reset_username/:
    post:
      operationId: resetUsernameCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - auth
  /auth/users/reset_username_confirm/:
    post:
      operationId: resetUsernameConfirmCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - auth
  /auth/users/set_password/:
    post:
      operationId: setPasswordCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - auth
  /auth/users/set_username/:
    post:
      operationId: setUsernameCustomUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - auth
  /auth/jwt/create/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - auth
  /auth/jwt/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - auth
  /auth/jwt/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - auth
  /api/friends/userfriends/{user}/{id}/:
    delete:
      operationId: destroyFriends
      description: User's Friends Destroy Class
      parameters:
      - name: user
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this friends.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          maxLength: 64
        first_name:
          type: string
          maxLength: 64
        last_name:
          type: string
          maxLength: 64
        email:
          type: string
          format: email
          maxLength: 254
      required:
      - username
      - first_name
      - last_name
      - email
    Friends:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_active:
          type: boolean
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        update_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        user1:
          type: integer
        user2:
          type: integer
      required:
      - user1
      - user2
    FriendshipRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        friendship_status:
          enum:
          - SENT
          - CONFIRMED
          - DECLINED
          type: string
        is_active:
          type: boolean
        create_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        update_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        sender:
          type: integer
        receiver:
          type: integer
      required:
      - friendship_status
      - sender
      - receiver
    UserCreate:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 254
        username:
          type: string
          maxLength: 64
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - username
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          maxLength: 64
      required:
      - new_username
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          maxLength: 64
      required:
      - current_password
      - new_username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
